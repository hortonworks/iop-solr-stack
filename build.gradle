/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "com.netflix.nebula:gradle-ospackage-plugin:4.4.0"
    classpath 'de.undercouch:gradle-download-task:3.2.0'
  }
}

apply plugin: 'idea'
apply plugin: 'distribution'
apply plugin: 'java'
apply plugin: "nebula.ospackage"

ext.src = 'src/main/resources/'
ext.distDir = "${projectDir}/dist"
ext.repostemplate = 'src/main/template/repos/repoinfo.xml'
ext.reposinfo = 'hdp-addon-services/SOLR/6.3.0/repos/'
ext.distPackageName="${packageName}"
ext.solrDescription = '''\
Solr is the popular, blazing fast open source enterprise search platform from
the Apache Lucene project. Its major features include powerful full-text
search, hit highlighting, faceted search, dynamic clustering, database
integration, rich document (e.g., Word, PDF) handling, and geospatial search.
Solr is highly scalable, providing distributed search and index replication,
and it powers the search and navigation features of many of the world's
largest internet sites.

Solr is written in Java and runs as a standalone full-text search server within
a servlet container such as Tomcat. Solr uses the Lucene Java search library at
its core for full-text indexing and search, and has REST-like HTTP/XML and JSON
APIs that make it easy to use from virtually any programming language. Solr's
powerful external configuration allows it to be tailored to almost any type of
application without Java coding, and it has an extensive plugin architecture
when more advanced customization is required.
'''

task wrapper(type: Wrapper) {
  gradleVersion = '3.2'
}

distributions {
  main {
    contents {
      baseName = packageName
      from { src }

      from { src + 'mpack.json' }
      filter { String line ->
        line.replace("{VERSION}", "${version}")
      }

      into(reposinfo) {
        from { repostemplate }
        filter { String line ->
          line.replace("{REPOID}", "${repoid}")
        }
      }
    }
  }
}

distTar {
  destinationDir = file(buildDir)
  appendix = 'mpack'
  compression = Compression.GZIP
  extension = 'tar.gz'
}

task buildTar(dependsOn: [clean, distTar]) {
}

import de.undercouch.gradle.tasks.download.Download

task downloadSolr(type: Download, dependsOn: buildTar) {
  src "${solrTar}"
  dest buildDir
  overwrite true
}

task untarSolr(type:Copy, dependsOn: [downloadSolr]){
  from tarTree(resources.gzip("${buildDir}/solr-${solrVersion}.tgz"))
  into buildDir
}

task processRangerConfigSet(type: Copy, dependsOn: [untarSolr]) {
  from "${distDir}/ranger_audit_configs"
  into "${buildDir}/solr-${solrVersion}/server/solr/configsets/ranger_audit_configs"
}

ospackage {
  packageName = "${distPackageName}"
  version = "${solrVersion}.${stackVersion}"
  release = "${stackBuildNumber}"
  into "${stackFolder}/${stackVersion}-${stackBuildNumber}"
  os = LINUX
  user = 'root'
  permissionGroup = 'root'
  license = "APL2"
  url = "http://lucene.apache.org/solr"
  summary = "Apache Solr is the popular, blazing fast open source enterprise search platform"
  from("${buildDir}/solr-${solrVersion}/") {
    into "${distPackageName}"
  }
}

task rpm(type: Rpm, dependsOn: [untarSolr, processRangerConfigSet]) {
  packageDescription = "${solrDescription}"
  directory("/var/log/${distPackageName}", 644)
  directory("/var/run/${distPackageName}", 644)
}

task deb(type: Deb, dependsOn: [untarSolr, processRangerConfigSet]) {
  packageDescription = "${solrDescription}".replaceAll("\n", "\n:")
  directory("/var/log/${distPackageName}", 644)
  directory("/var/run/${distPackageName}", 644)
}
